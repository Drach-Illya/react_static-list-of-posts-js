{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","users","post","userId","title","find","postUser","commentsFiltered","filter","postId","length","PostList","posts","App","postsFromServer","commentsFromServer","usersFromServer","ReactDOM","render","document","getElementById"],"mappings":"228IAEaA,EAAc,SAAC,GAAD,QACzBC,QACEC,EAFuB,EAEvBA,KACAC,EAHuB,EAGvBA,MACAC,EAJuB,EAIvBA,KAJuB,OAOzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,mBAA0CH,KAEzC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,mBAIMA,QAIR,qBAAKE,UAAU,oBAAf,mBACMD,SCrBGG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,UCJrCC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGP,UAAU,WAAWC,KAAI,iBAAYM,EAAKT,OAA7C,mBACMS,EAAKV,UCGAW,EAAW,SAAC,GASlB,IARLC,EAQI,EARJA,MACAN,EAOI,EAPJA,SAOI,IANJO,KACEL,EAKE,EALFA,GACAM,EAIE,EAJFA,OACAC,EAGE,EAHFA,MACAb,EAEE,EAFFA,KAGIQ,EAAOE,EAAMI,MAAK,SAAAC,GAAQ,OAAIA,EAAST,KAAOM,KAC9CI,EACJZ,EAASa,QAAO,SAAApB,GAAO,OAAIA,EAAQqB,SAAWZ,KAEhD,OACE,sBAAKL,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,mBACMY,KAGN,8BACG,eAED,cAAC,EAAD,CAAUL,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,mBACMD,KAGuB,IAA5BgB,EAAiBG,OAEd,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,gCAGF,cAAC,EAAD,CAAaf,SAAUY,QC5CpBI,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOjB,EAAV,EAAUA,SAAUM,EAApB,EAAoBA,MAApB,OACtB,qBAAKT,UAAU,WAAf,SACGoB,EAAMhB,KAAI,SAAAM,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,EACNP,SAAUA,EACVM,MAAOA,GACFC,EAAKL,U,qBCHLgB,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CACEoB,MAAOE,EACPnB,SAAUoB,EACVd,MAAOe,QCVbC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6e48d836.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({\n  comment: {\n    name,\n    email,\n    body,\n  },\n}) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{`${name}`}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {`${email}`}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {`${body}`}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {`${user.name}`}\n  </a>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\n// import usersFromServer from '../../api/users.json';\n// import commentsFromServer from '../../api/comments.json';\n\nexport const PostInfo = ({\n  users,\n  comments,\n  post: {\n    id,\n    userId,\n    title,\n    body,\n  },\n}) => {\n  const user = users.find(postUser => postUser.id === userId);\n  const commentsFiltered\n  = comments.filter(comment => comment.postId === id);\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {`${title}`}\n        </h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {`${body}`}\n      </p>\n\n      {commentsFiltered.length === 0\n        ? (\n          <>\n            <hr />\n\n            <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n          </>\n        )\n        : <CommentList comments={commentsFiltered} />\n      }\n    </div>\n  );\n};\n","import './PostList.scss';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts, comments, users }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        post={post}\n        comments={comments}\n        users={users}\n        key={post.id}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList\n      posts={postsFromServer}\n      comments={commentsFromServer}\n      users={usersFromServer}\n    />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}