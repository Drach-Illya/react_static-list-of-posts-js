{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","userId","length","PostList","posts","App","postsExtra","postsFromServer","usersFromServer","find","commentsFromServer","filter","postId","ReactDOM","render","document","getElementById"],"mappings":"m38IAEaA,EAAc,SAAC,GAAD,QACzBC,QACEC,EAFuB,EAEvBA,KACAC,EAHuB,EAGvBA,MACAC,EAJuB,EAIvBA,KAJuB,OAOzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCrBMG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,UCJrCC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGP,UAAU,WAAWC,KAAI,iBAAYM,EAAKT,OAA7C,SACGS,EAAKV,SCAGW,EAAW,SAAC,GAAD,QACtBC,KAGEC,GAJoB,EAEpBL,GAFoB,EAGpBM,OAHoB,EAIpBD,OACAX,EALoB,EAKpBA,KACAQ,EANoB,EAMpBA,KANoB,IAOpBJ,gBAPoB,MAOT,GAPS,SAUtB,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGH,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SACGD,IAGmB,IAApBI,EAASS,OAEP,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,gCAGF,cAAC,EAAD,CAAaT,SAAUA,QCpClBU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKd,UAAU,WAAf,SACGc,EAAMV,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,GACDA,EAAKJ,U,qBCDLU,EAAM,WACjB,IAAMC,EAAaC,EAAgBb,KAAI,SAAAK,GAAI,kCACtCA,GADsC,IAEzCF,KAAMW,EAAgBC,MAAK,SAAAZ,GAAI,OAAIE,EAAKE,SAAWJ,EAAKF,MACxDF,SAAUiB,EACPC,QAAO,SAAAzB,GAAO,OAAIA,EAAQ0B,SAAWb,EAAKJ,WAG/C,OACE,0BAASL,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CACEc,MAAOE,QChBfO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.21cb2ecb.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({\n  comment: {\n    name,\n    email,\n    body,\n  },\n}) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({\n  post: {\n    id,\n    userId,\n    title,\n    body,\n    user,\n    comments = [],\n  },\n}) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    {(comments.length === 0)\n      ? (\n        <>\n          <hr />\n\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        </>\n      )\n      : <CommentList comments={comments} />\n    }\n  </div>\n);\n","import './PostList.scss';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        post={post}\n        key={post.id}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nexport const App = () => {\n  const postsExtra = postsFromServer.map(post => ({\n    ...post,\n    user: usersFromServer.find(user => post.userId === user.id),\n    comments: commentsFromServer\n      .filter(comment => comment.postId === post.id),\n  }));\n\n  return (\n    <section className=\"App\">\n      <h1 className=\"App__title\">Static list of posts</h1>\n\n      <PostList\n        posts={postsExtra}\n      />\n    </section>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}